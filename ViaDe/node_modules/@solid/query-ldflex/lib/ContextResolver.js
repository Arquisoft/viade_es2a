"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ldflex = require("ldflex");

/**
 * A ContextResolver is a combined resolver/handler that:
 * - resolves a JSON-LD context
 * - handles by returning an object that
 *   - is the initial context passed to the constructor
 *   - allows extending that context by calling `.extend`
 *   - when `await`ed, resolves to the expanded context
 */
class ContextResolver extends _ldflex.JSONLDResolver {
  constructor(context) {
    var _this;

    super(context);
    _this = this;
    // Create an exposed version of the initial context, with additional functionality
    const exposedContext = this._exposedContext = Object.create(context['@context']); // Allow extending the context

    Object.defineProperty(exposedContext, 'extend', {
      value: function value() {
        return _this.extendContext(...arguments);
      }
    }); // Resolve to the expanded context

    Object.defineProperty(exposedContext, 'then', {
      value: (resolve, reject) => this._context.then(resolve, reject)
    });
  }

  handle() {
    return this._exposedContext;
  }

}

exports.default = ContextResolver;